import com.sdl.dxa.builder.maven.MavenBuildTask
import com.sdl.dxa.builder.maven.MavenHelpTask
import groovy.xml.DOMBuilder
import groovy.xml.XmlUtil
import groovy.xml.dom.DOMCategory

apply plugin: 'groovy'

buildscript {
    repositories {
        mavenLocal()
        mavenCentral()
        maven {
            url "https://oss.sonatype.org/content/repositories/snapshots"
        }
    }
    //noinspection GroovyAssignabilityCheck
    dependencies {
        classpath group: 'com.sdl.dxa', name: 'dxa-builder', version: version
    }
}

defaultTasks 'buildDxa'

task wrapper(type: Wrapper) {
    gradleVersion = '2.9'
    distributionUrl = "https://services.gradle.org/distributions/gradle-$gradleVersion-all.zip"
}

task help(type: MavenHelpTask)

task buildFramework(type: MavenBuildTask) {
    configurations = [
            ["dxa-oss-parent"],
            ["dxa-model-service-client", "dxa-javadoc-tools"],
            ["dxa-framework", "dxa-dd4t-ms-provider"],
            ["> dxa-webapp > clean org.apache.maven.plugins:maven-archetype-plugin:2.4:create-from-project -Darchetype.properties=archetype.properties"]
    ]
}

task prepareArchetype(dependsOn: buildFramework) << {
    def from = file("${project.projectDir}/dxa-webapp/target/generated-sources/archetype/src/main/resources/archetype-resources/pom.xml")
    def to = file("${project.projectDir}/dxa-webapp/target/generated-sources/archetype/pom.xml")

    def docFrom = DOMBuilder.parse(new FileReader(from), false, true, true)
    def docTo = DOMBuilder.parse(new FileReader(to), false, true, true)

    def rootFrom = docFrom.documentElement
    def rootTo = docTo.documentElement

    def parentTag = rootFrom.getElementsByTagName('parent').item(0)

    use(DOMCategory) {
        def importNode = docTo.importNode(parentTag, true)
        rootTo.insertBefore(importNode, rootTo.getFirstChild())
    }

    rootFrom.removeChild(parentTag)

    rootFrom.normalize()
    rootTo.normalize()

    XmlUtil.serialize rootFrom, from.newPrintWriter()
    XmlUtil.serialize rootTo, to.newPrintWriter()

    println 'POMs for Archetype have been changed (parent tag moved from archetype itself to its pom)'

    def iml = new File("${project.projectDir}/dxa-webapp/target/generated-sources/archetype/src/main/resources/archetype-resources/__artifactId__.iml")
    iml.delete()
}

task buildArchetype(type: MavenBuildTask, dependsOn: prepareArchetype) {
    configurations = [["dxa-webapp/target/generated-sources/archetype"]]
}

task buildPublicApiDocs(type: MavenBuildTask, dependsOn: buildFramework) {
    configurations = [
            //[ "> dxa-framework/dxa-common-api > javadoc:javadoc@publicApi" ],
            //[ "> dxa-framework/dxa-tridion-provider > javadoc:javadoc@publicApi" ]
    ]
}

task buildDxa(type: MavenBuildTask, dependsOn: [buildFramework, buildArchetype, buildPublicApiDocs])

def mavenSettings = {
    if (project.hasProperty('command')) {
        command = project.command
    }

    verbose = project.hasProperty('verbose')

    batch = project.hasProperty('batch')

    if (project.hasProperty('mavenProperties')) {
        mavenProperties = project.mavenProperties
    }
}

buildFramework mavenSettings
buildArchetype mavenSettings
buildDxa mavenSettings
